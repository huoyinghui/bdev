// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aws_email.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	aws_email.proto
	developer.proto
	message.proto
	token.proto

It has these top-level messages:
	EmailRequest
	EmailResponse
	Message
	MessageResponse
	MessageReadRequest
	MessageListResponse
	MessageDeleteRequest
	GenToekenRequest
	GenTokenResponse
	CheckToekenRequest
	CheckTokenResponse
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmailRequest struct {
	Sender   string   `protobuf:"bytes,1,opt,name=sender" json:"sender,omitempty"`
	To       string   `protobuf:"bytes,2,opt,name=to" json:"to,omitempty"`
	Cc       []string `protobuf:"bytes,3,rep,name=cc" json:"cc,omitempty"`
	Subject  string   `protobuf:"bytes,4,opt,name=subject" json:"subject,omitempty"`
	Charset  string   `protobuf:"bytes,5,opt,name=charset" json:"charset,omitempty"`
	TextBody string   `protobuf:"bytes,6,opt,name=textBody" json:"textBody,omitempty"`
	HtmlBody string   `protobuf:"bytes,7,opt,name=htmlBody" json:"htmlBody,omitempty"`
}

func (m *EmailRequest) Reset()                    { *m = EmailRequest{} }
func (m *EmailRequest) String() string            { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()               {}
func (*EmailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EmailRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *EmailRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *EmailRequest) GetCc() []string {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *EmailRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailRequest) GetCharset() string {
	if m != nil {
		return m.Charset
	}
	return ""
}

func (m *EmailRequest) GetTextBody() string {
	if m != nil {
		return m.TextBody
	}
	return ""
}

func (m *EmailRequest) GetHtmlBody() string {
	if m != nil {
		return m.HtmlBody
	}
	return ""
}

type EmailResponse struct {
	MessageId string `protobuf:"bytes,1,opt,name=messageId" json:"messageId,omitempty"`
}

func (m *EmailResponse) Reset()                    { *m = EmailResponse{} }
func (m *EmailResponse) String() string            { return proto.CompactTextString(m) }
func (*EmailResponse) ProtoMessage()               {}
func (*EmailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EmailResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func init() {
	proto.RegisterType((*EmailRequest)(nil), "protos.EmailRequest")
	proto.RegisterType((*EmailResponse)(nil), "protos.EmailResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for EmailService service

type EmailServiceClient interface {
	// 发送邮件
	SendMail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*EmailResponse, error)
}

type emailServiceClient struct {
	cc *grpc.ClientConn
}

func NewEmailServiceClient(cc *grpc.ClientConn) EmailServiceClient {
	return &emailServiceClient{cc}
}

func (c *emailServiceClient) SendMail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*EmailResponse, error) {
	out := new(EmailResponse)
	err := grpc.Invoke(ctx, "/protos.EmailService/SendMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EmailService service

type EmailServiceServer interface {
	// 发送邮件
	SendMail(context.Context, *EmailRequest) (*EmailResponse, error)
}

func RegisterEmailServiceServer(s *grpc.Server, srv EmailServiceServer) {
	s.RegisterService(&_EmailService_serviceDesc, srv)
}

func _EmailService_SendMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServiceServer).SendMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.EmailService/SendMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServiceServer).SendMail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.EmailService",
	HandlerType: (*EmailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMail",
			Handler:    _EmailService_SendMail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aws_email.proto",
}

func init() { proto.RegisterFile("aws_email.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xbb, 0x4e, 0xc3, 0x30,
	0x14, 0x86, 0x49, 0x0a, 0x69, 0x7b, 0xc4, 0x45, 0x58, 0x80, 0xac, 0x8a, 0xa1, 0x64, 0x62, 0x21,
	0x03, 0x4c, 0xac, 0x91, 0x18, 0x3a, 0xb0, 0xb4, 0x0f, 0x80, 0x5c, 0xe7, 0x88, 0x06, 0x92, 0x38,
	0xf8, 0x9c, 0x70, 0x79, 0x2d, 0x9e, 0x10, 0xf9, 0x52, 0x6e, 0x93, 0xf5, 0xfd, 0xdf, 0x91, 0x7d,
	0xfc, 0xc3, 0x91, 0x7a, 0xa3, 0x07, 0x6c, 0x55, 0xdd, 0x14, 0xbd, 0x35, 0x6c, 0x44, 0xe6, 0x0f,
	0xca, 0x3f, 0x13, 0xd8, 0xbf, 0x73, 0xf9, 0x12, 0x5f, 0x06, 0x24, 0x16, 0x67, 0x90, 0x11, 0x76,
	0x15, 0x5a, 0x99, 0xcc, 0x93, 0xcb, 0xe9, 0x32, 0x92, 0x38, 0x84, 0x94, 0x8d, 0x4c, 0x7d, 0x96,
	0xb2, 0x71, 0xac, 0xb5, 0x1c, 0xcd, 0x47, 0x8e, 0xb5, 0x16, 0x12, 0xc6, 0x34, 0xac, 0x9f, 0x50,
	0xb3, 0xdc, 0xf5, 0x43, 0x5b, 0x74, 0x46, 0x6f, 0x94, 0x25, 0x64, 0xb9, 0x17, 0x4c, 0x44, 0x31,
	0x83, 0x09, 0xe3, 0x3b, 0x97, 0xa6, 0xfa, 0x90, 0x99, 0x57, 0xdf, 0xec, 0xdc, 0x86, 0xdb, 0xc6,
	0xbb, 0x71, 0x70, 0x5b, 0xce, 0xaf, 0xe0, 0x20, 0xee, 0x4c, 0xbd, 0xe9, 0x08, 0xc5, 0x39, 0x4c,
	0x5b, 0x24, 0x52, 0x8f, 0xb8, 0xa8, 0xe2, 0xde, 0x3f, 0xc1, 0xf5, 0x22, 0x7e, 0x71, 0x85, 0xf6,
	0xb5, 0xd6, 0x28, 0x6e, 0x61, 0xb2, 0xc2, 0xae, 0xba, 0x57, 0x75, 0x23, 0x4e, 0x42, 0x1f, 0x54,
	0xfc, 0x2e, 0x61, 0x76, 0xfa, 0x2f, 0x0d, 0xcf, 0xe4, 0x3b, 0xe5, 0x05, 0x1c, 0x6b, 0xd3, 0x16,
	0xaa, 0x7f, 0xee, 0x07, 0x8b, 0x61, 0xaa, 0xfc, 0x73, 0xfb, 0x3a, 0x34, 0x7b, 0xf3, 0x15, 0x00,
	0x00, 0xff, 0xff, 0x12, 0x89, 0x8d, 0x92, 0x73, 0x01, 0x00, 0x00,
}
